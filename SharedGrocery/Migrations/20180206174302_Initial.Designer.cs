// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using SharedGrocery;
using System;
using SharedGrocery.GroceryService.Repository.DBContexts;

namespace SharedGrocery.Migrations
{
    [DbContext(typeof(GroceryDataContext))]
    [Migration("20180206174302_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-preview1-24937")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SharedGrocery.Grocery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GroceryListId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GroceryListId");

                    b.ToTable("Groceries");
                });

            modelBuilder.Entity("SharedGrocery.GroceryList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("GroceryLists");
                });

            modelBuilder.Entity("SharedGrocery.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Token");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SharedGrocery.Grocery", b =>
                {
                    b.HasOne("SharedGrocery.GroceryList")
                        .WithMany("Groceries")
                        .HasForeignKey("GroceryListId");
                });

            modelBuilder.Entity("SharedGrocery.GroceryList", b =>
                {
                    b.HasOne("SharedGrocery.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");
                });
        }
    }
}
